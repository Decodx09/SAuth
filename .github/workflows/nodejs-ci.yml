name: SAuth CI/CD Pipeline

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      - run: npm install

  codeql-analysis:
    needs: build-and-test
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
      - uses: actions/checkout@v4
      - uses: github/codeql-action/init@v3
        with:
          languages: javascript
      - uses: github/codeql-action/analyze@v3

  build-and-scan-docker-image:
    needs: build-and-test
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.meta.outputs.tags }}
      latest: ghcr.io/${{ github.repository }}:latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}
      - id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=sha,format=short
            type=raw,value=latest,enable=true
      - uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  prepare-matrix:
    runs-on: ubuntu-latest
    outputs:
      hosts: ${{ steps.set-matrix.outputs.hosts }}
    steps:
      - id: set-matrix
        shell: bash
        run: |
          # Expect vars.EC2_HOST to be a comma-separated list or a single host
          raw="${{ vars.EC2_HOST }}"
          # Convert to JSON array of strings
          if [[ "$raw" == *","* ]]; then
            IFS=',' read -r -a arr <<< "$raw"
            json="["
            sep=""
            for h in "${arr[@]}"; do
              h_trim="$(echo "$h" | xargs)"
              json="${json}${sep}\"$h_trim\""
              sep=","
            done
            json="${json}]"
          else
            h_trim="$(echo "$raw" | xargs)"
            json="[\"$h_trim\"]"
          fi
          echo "hosts=$json" >> "$GITHUB_OUTPUT"

  deploy:
    needs: [build-and-scan-docker-image, prepare-matrix]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        host: ${{ fromJSON(needs.prepare-matrix.outputs.hosts) }}
    steps:
      - name: Deploy to EC2 Instance
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ matrix.host }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            set -e
            sudo usermod -aG docker ${{ secrets.EC2_USERNAME }} || true

            echo "Logging into GHCR..."
            echo "${{ secrets.CR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

            # Pull the latest digest/tagged image (you can pick one)
            echo "Pulling image..."
            docker pull ${{ needs.build-and-scan-docker-image.outputs.latest }}

            echo "Stopping/removing old container..."
            docker stop my-app || true
            docker rm my-app || true

            echo "Starting new container..."
            docker run -d -p 3000:3000 --name my-app --restart always ${{ needs.build-and-scan-docker-image.outputs.latest }}

            echo "Deployment complete on host ${{ matrix.host }}. App at http://${{ matrix.host }}:3000"
