name: SAuth CI/CD

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Dependencies
        run: npm install

      # - name: Run Tests
      #   run: npm test

  build-docker-image:
    needs: build-and-test
    runs-on: ubuntu-latest
    # This 'outputs' section will pass the final tag to the next job
    outputs:
      image_tag: ${{ steps.meta.outputs.tags }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}

      # This new step automatically creates lowercase tags and labels
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          # Use the safe, lowercase tags generated by the metadata action
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    needs: build-docker-image
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to EC2 by running Docker container
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            set -e

            echo "Logging into GitHub Container Registry on the server..."
            echo "${{ secrets.CR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

            echo "Pulling the latest image from the registry..."
            # Use the lowercase image tag passed from the previous job
            docker pull ${{ needs.build-docker-image.outputs.image_tag }}

            echo "Stopping and removing the old container..."
            docker stop my-app || true
            docker rm my-app || true

            echo "Starting the new container..."
            # Use the lowercase image tag here as well
            docker run -d -p 3000:3000 --name my-app --restart always ${{ needs.build-docker-image.outputs.image_tag }}
